---
name: Testing

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.11"

jobs:
  pytest:
    name: Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        python: ["3.11"]
        experimental: [false]
        include:
          - python: "3.12"
            experimental: true
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.1
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install dependencies
        run: poetry install --no-interaction --no-root
      - name: 🚀 Run pytest
        run: poetry run pytest --cov app tests
        env:
          FLASK_APP: run.py
          FLASK_ENV: development
          MQTT_BROKER_PORT: 1883
          MQTT_BROKER_URL: ""
          MQTT_KEEPALIVE: 60
          SECRET_KEY: dontsharethiskey
      - name: ⬆️ Upload coverage artifact
        uses: actions/upload-artifact@v4.3.0
        with:
          name: coverage-${{ matrix.python }}
          path: .coverage

  coverage:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: ⬇️ Download coverage data
        uses: actions/download-artifact@v4.1.1
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: 'poetry'
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install dependencies
        run: poetry install --no-interaction --no-root
      - name: 🚀 Process coverage results
        run: |
          poetry run coverage combine coverage*/.coverage*
          poetry run coverage xml -i
      - name: 🚀 Upload coverage report
        uses: codecov/codecov-action@v3.1.4
