[tool.poetry]
name = "stair-flask"
version = "0.1.0"
description = "Management environment of the stair challenge project"
authors = ["Klaas Schoute <hello@student-techlife.com>"]
maintainers = ["Klaas Schoute <hello@student-techlife.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
flask = "^2.3.3"
paho-mqtt = "^1.6.1"
python-dotenv = "^1.0.0"
flask-sqlalchemy = "^3.1.1"
flask-login = "^0.6.2"
flask-wtf = "^1.1.1"
email-validator = "^2.0.0.post2"
flask-socketio = "^5.3.6"
pymysql = "^1.1.0"
eventlet = "^0.33.3"
rpi-ws281x = "^5.0.0"

[tool.poetry.group.dev.dependencies]
black = "23.9.1"
blacken-docs = "1.16.0"
ruff = "0.0.292"
pre-commit = "3.5.0"
pre-commit-hooks = "4.5.0"
yamllint = "1.32.0"
pylint = "3.0.1"
pytest = "7.4.2"
pytest-cov = "4.1.0"
covdefaults = "2.3.0"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["app"]

[tool.coverage.report]
fail_under = 55
show_missing = true

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# flake8-mypy expects the two following for sensible formatting
show_column_numbers = true

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.BASIC]
good-names = [
  "_",
  "ex",
  "fp",
  "i",
  "id",
  "j",
  "k",
  "on",
  "Run",
  "T",
  "wv",
]

[tool.pylint."MESSAGES CONTROL"]
disable= [
  "too-few-public-methods",
  "too-many-arguments",
  "duplicate-code",
  "format",
  "unsubscriptable-object",
  "broad-except",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.DESIGN]
max-attributes = 12

[tool.pytest.ini_options]
addopts = "--cov"

[tool.ruff]
select = ["ALL"]
extend-exclude = ["test_*.py"]
ignore = [
  "ANN101", # Self... explanatory
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "ERA001", # Comments are allowed
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful
  "T201", # Allow the use of print()
  "S104", # Allow binding to all interfaces
]

[tool.ruff.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.mccabe]
max-complexity = 25

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
